loadI   1       => r_1 
push    r_1            // Push 1
loadI   3       => r_1 
push    r_1            // Push 3
pop             => r_1 // Pop 3
rsubI   r_1,0   => r_2 
push    r_2            // Push -3
loadI   4       => r_1 
push    r_1            // Push 4
pop             => r_2 // Pop 4
pop             => r_1 // Pop -3
mult    r_1,r_2 => r_2 
push    r_2            // Push -3*4
pop             => r_2 // Pop -3*4
pop             => r_1 // Pop 1
add     r_1,r_2 => r_2 
push    r_2            // Push 1+-3*4
out     "Outcome: ",r_2 

